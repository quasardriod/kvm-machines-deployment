---

- hosts: 10.107.69.195
  become: true
  become_method: sudo
  vars:
    centos_template: centos7.0
    type: network
    vm_internal_network: DP
    nic_device_model: virtio
    storage_pool: vms
    cinder_disk: os-c0-cinder

  tasks:
  - name: Create OpenStack Controller (os-c0) and Compute (os-com0) VMs clone from centOS7.0 template
    command: virt-clone -o "{{centos_template}}" -n "{{item}}" -f /vms/"{{item}}".qcow2
    with_items:
      - os-c0
      - os-com0

  - name: Set Max RAM for controller and compute VMs
    command: virsh setmaxmem "{{ item.vm }}" "{{ item.ram }}" --config
    with_items:
      - { vm: 'os-c0', ram: '5G' }
      - { vm: 'os-com0', ram: '3G' }

  - name: Set Usable RAM for controller and compte VMs
    command: virsh setmem "{{ item.vm }}" "{{ item.ram }}" --config
    with_items:
      - { vm: 'os-c0', ram: '5G' }
      - { vm: 'os-com0', ram: '3G' }

  - name: Set Max CPU for controller and compute VMs
    command: virsh setvcpus "{{ item.vm }}" "{{ item.cpu }}" --config --maximum
    with_items:
      - { vm: 'os-c0', cpu: '4' }
      - { vm: 'os-com0', cpu: '2' }

  - name: Set Usable CPU for controller and compte VMs
    command: virsh setvcpus "{{ item.vm }}" "{{ item.cpu }}" --config
    with_items:
      - { vm: 'os-c0', cpu: '4' }
      - { vm: 'os-com0', cpu: '2' }

  - name: Attach a virtul disk to contoller node for cinder-volumes VG
    command: "{{item}}"
    with_items:
       - virsh vol-create-as "{{storage_pool}}" "{{cinder_disk}}".qcow2 25G --format qcow2
       - virsh attach-disk "{{controller_vm}}" /"{{storage_pool}}"/"{{cinder_disk}}".qcow2 vdb --config --persistent --targetbus virtio --driver qemu --subdriver qcow2

  - name: Attach Data Plane network DP to both VMs (internal Network)
    command: virsh attach-interface "{{item}}" "{{type}}" "{{vm_internal_network}}" --model "{{nic_device_model}}" --config
    with_items:
      - os-c0
      - os-com0
    notify:
      - restart libvirtd

  - name: List both VMs
    shell: virsh list --all|grep -i os
    register: list_vms
  - debug:
      var: list_vms.stdout

  - name: Start both VMs
    command: virsh start "{{item}}"
    with_items:
      - os-c0
      - os-com0

  handlers:
    - name: restart libvirtd
      service:
        name: libvirtd
        state: restarted
